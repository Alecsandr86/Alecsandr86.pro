html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Here are example usages in HTML:

`display: block` sprite:
<div class="icon-home"></div>

`display: inline-block` sprite:
<img class="icon-home" />
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
.a01 {
  background-image: url(../images/sprite.png);
  background-position: 0px 0px;
  width: 1920px;
  height: 1080px; }

.a02 {
  background-image: url(../images/sprite.png);
  background-position: 0px -1100px;
  width: 1920px;
  height: 1080px; }

.a03 {
  background-image: url(../images/sprite.png);
  background-position: 0px -2200px;
  width: 1920px;
  height: 1080px; }

.a04 {
  background-image: url(../images/sprite.png);
  background-position: 0px -3300px;
  width: 1920px;
  height: 1080px; }

.a05 {
  background-image: url(../images/sprite.png);
  background-position: 0px -4400px;
  width: 1920px;
  height: 1080px; }

.a06 {
  background-image: url(../images/sprite.png);
  background-position: 0px -5500px;
  width: 1920px;
  height: 1080px; }

.a07 {
  background-image: url(../images/sprite.png);
  background-position: 0px -6600px;
  width: 1920px;
  height: 1080px; }

.a08 {
  background-image: url(../images/sprite.png);
  background-position: 0px -7700px;
  width: 1920px;
  height: 1080px; }

.a09 {
  background-image: url(../images/sprite.png);
  background-position: 0px -8800px;
  width: 1920px;
  height: 1080px; }

.a10 {
  background-image: url(../images/sprite.png);
  background-position: 0px -9900px;
  width: 1920px;
  height: 1080px; }

.a11 {
  background-image: url(../images/sprite.png);
  background-position: 0px -11000px;
  width: 1920px;
  height: 1080px; }

.a12 {
  background-image: url(../images/sprite.png);
  background-position: 0px -12100px;
  width: 1920px;
  height: 1080px; }

.a13 {
  background-image: url(../images/sprite.png);
  background-position: 0px -13200px;
  width: 1920px;
  height: 1080px; }

.a14 {
  background-image: url(../images/sprite.png);
  background-position: 0px -14300px;
  width: 1920px;
  height: 1080px; }

.a15 {
  background-image: url(../images/sprite.png);
  background-position: 0px -15400px;
  width: 1920px;
  height: 1080px; }

/**
 * modified version of eric meyer's reset 2.0
 * http://meyerweb.com/eric/tools/css/reset/
 */
/**
 * basic reset
 */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, main,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/**
 * HTML5 display-role reset for older browsers
 */
article, aside, details, figcaption, figure,
footer, header, menu, nav, section,
main, summary {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/**
 * modified version of normalize.css 3.0.2
 * http://necolas.github.io/normalize.css/
 */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

/**
 * HTML5 display definitions
 * =============================================================================
 */
/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/**
 * Links
 * =============================================================================
 */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/**
 * Text-level semantics
 * =============================================================================
 */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * 1. Address styling not present in Safari and Chrome.
 * 2. Set previously resetted italic font-style
 */
dfn,
i, em {
  font-style: italic; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/**
 * Embedded content
 * =============================================================================
 */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/**
 * Grouping content
 * =============================================================================
 */
/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace; }

/**
 * Forms
 * =============================================================================
 */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0; }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  padding: 0; }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

@font-face {
  font-family: "panton-regular";
  src: url("../fonts/panton-regular.eot");
  src: url("../fonts/panton-regular.eot?#iefix") format("embedded-opentype"), url("../fonts/panton-regular.woff") format("woff"), url("../fonts/panton-regular.ttf") format("truetype"), url("../fonts/panton-regular.svg#panton-regular") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: "panton-bold";
  src: url("../fonts/panton-bold.eot");
  src: url("../fonts/panton-bold.eot?#iefix") format("embedded-opentype"), url("../fonts/panton-bold.woff") format("woff"), url("../fonts/panton-bold.ttf") format("truetype"), url("../fonts/panton-bold.svg#panton-bold") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: "panton-light";
  src: url("../fonts/panton-light.eot");
  src: url("../fonts/panton-light.eot?#iefix") format("embedded-opentype"), url("../fonts/panton-light.woff") format("woff"), url("../fonts/panton-light.ttf") format("truetype"), url("../fonts/panton-light.svg#panton-light") format("svg");
  font-weight: normal;
  font-style: normal; }

html {
  font-size: 15px;
  font-family: "Roboto", "Arial", "Helvetica Neue", "Helvetica", sans-serif;
  color: #fff; }

h1 {
  font-size: 2.4rem; }

h2 {
  font-size: 2rem; }

h3 {
  font-size: 1.6rem; }

h4 {
  font-size: 1.2rem; }

h5 {
  font-size: 0.93333rem; }

h6 {
  font-size: 0.8rem; }

p {
  padding: 20px 0;
  line-height: 1.6rem; }

i {
  display: inline-block; }

a {
  color: #fff; }

.left {
  float: left; }

.right {
  float: right; }

.cr {
  float: none;
  clear: both;
  margin: 0;
  padding: 0;
  font-size: 0.1px; }

.clarfix:after {
  clear: both;
  content: "";
  display: block;
  float: none;
  margin: 0;
  padding: 0; }

.btn {
  display: inline-block;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  border: 1px solid #fff;
  border-radius: 25px;
  line-height: 43px;
  font-family: "panton-bold";
  font-size: 0.73333rem;
  color: #fff;
  text-decoration: none;
  text-transform: uppercase;
  padding: 0 20px;
  min-width: 145px;
  transition: all 0.2s cubic-bezier(0.455, 0.03, 0.515, 0.955); }
  .btn:hover {
    background-color: #29aae1;
    border-color: #29aae1; }
  .btn_size_m {
    min-width: 227px; }
  .btn-lg {
    width: 180px;
    padding: 18px 0; }
  .btn-md {
    width: 150px;
    padding: 15px 0; }
  .btn-sm {
    width: 120px;
    padding: 12px 0; }
  .btn-xs {
    width: 100px;
    padding: 10px 0; }
  .btn_theme_blue {
    background-color: #29aae1;
    border-color: #29aae1; }
    .btn_theme_blue:hover {
      background-color: #fff;
      border-color: #fff;
      color: #29aae1; }
  .btn_theme_hover-white:hover {
    background-color: #fff;
    border-color: #fff;
    color: #29aae1; }

.wrapper {
  max-width: 1400px;
  width: 100%;
  margin: 0 auto; }
  .wrapper-h100 {
    height: 100%; }

.box-content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -ms-flex-flow: row wrap;
      flex-flow: row wrap;
  height: 100%; }
  .box-content__text_theme_center {
    text-align: center; }

.title-big {
  font-family: "panton-light";
  text-transform: uppercase;
  font-size: 4.33333rem; }

.title-middle {
  font-family: "panton-light";
  font-size: 4.33333rem; }

.nav-menu__link {
  display: inline-block;
  text-decoration: none;
  font-family: "panton-bold";
  opacity: .6;
  padding: 0 15px;
  transition: all .2s ease;
  height: 100%; }
  .nav-menu__link_first {
    display: none; }
  .nav-menu__link.active {
    opacity: 1;
    position: relative; }
    .nav-menu__link.active:after {
      content: '';
      height: 22px;
      width: 1px;
      background-color: #29aae1;
      position: absolute;
      left: 50%;
      bottom: -40px; }

.nav-details__item {
  display: inline-block;
  padding: 0 15px; }

.icon-lines {
  display: inline-block;
  height: 1px;
  width: 22px;
  background-color: #fff;
  vertical-align: middle; }

.section {
  width: 100%;
  overflow: hidden; }
  .section__box-description {
    width: 40%;
    float: left;
    padding-left: 120px; }
  .section__box-img {
    float: left;
    width: 60%; }
    .section__box-img_theme_h {
      min-height: 350px; }
  .section__bg_theme_dark {
    background: #343f56 url("../images/section-one-mask.png") bottom center no-repeat;
    background-size: cover; }
  .section__bg_theme_light {
    background: #4d739f url("../images/section-two-mask.png") center center no-repeat;
    background-size: cover; }
  .section__shadow {
    position: relative; }
    .section__shadow:after {
      content: '';
      background: url("../images/section-one-shadow.png") 0 0 repeat-x;
      width: 100%;
      height: 406px;
      position: absolute;
      bottom: -1px;
      left: 0;
      right: 0;
      z-index: 9; }
  .section__theme_dark {
    background-color: #343f56; }
  .section__rates {
    text-align: center; }
  .section__rates-list {
    padding: 40px 0; }

.box-description {
  height: 100%; }
  .box-description_theme_w100 {
    width: 100%;
    height: 50%; }

.box-img {
  position: relative; }
  .box-img_theme_h-100 {
    height: 100%; }
  .box-img_theme_w100 {
    width: 100%; }
  .box-img_theme_center {
    text-align: center; }
  .box-img__mac {
    max-width: 80%; }
  .box-img__1 {
    position: absolute;
    top: -113px;
    right: 126px; }
  .box-img__2 {
    position: absolute;
    top: -52px;
    right: -5px; }
  .box-img__3 {
    position: absolute;
    top: 44px;
    right: -73px; }
  .box-img__4 {
    position: absolute;
    top: -42px;
    right: -19px; }
  .box-img__5 {
    position: absolute;
    top: -102px;
    right: 105px; }
  .box-img__6 {
    position: absolute;
    top: 0; }

#fp-nav.left {
  left: 90px; }

#fp-nav ul li a span, .fp-slidesNav ul li a span {
  width: 6px;
  height: 6px;
  background-color: #fff;
  opacity: .6; }

#fp-nav ul li a.active span, #fp-nav ul li:hover a.active span, .fp-slidesNav ul li a.active span, .fp-slidesNav ul li:hover a.active span {
  width: 6px;
  height: 6px;
  opacity: 1;
  margin: -2px 0 0 -2px; }

#fp-nav ul li, .fp-slidesNav ul li {
  height: 30px; }

.fp-nav__numb {
  font-size: 0.86667rem;
  font-family: "panton-bold";
  display: inline-block;
  margin: 40px 3px;
  -webkit-transform: rotate(-90deg);
  transform: rotate(-90deg); }

.rates_text_center {
  text-align: center; }

.rates-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }
  .rates-list__item {
    width: 365px;
    position: relative; }
    .rates-list__item:after {
      content: '';
      width: 1px;
      height: 110px;
      background-color: #fff;
      position: absolute;
      top: 30px;
      right: 0;
      opacity: .6; }
    .rates-list__item:last-child:after {
      display: none; }

.rates-box {
  font-family: "Lato", sans-serif;
  min-height: 250px; }
  .rates-box__title {
    font-weight: bold;
    font-size: 1.33333rem;
    line-height: 2.4rem; }
  .rates-box__price {
    line-height: 2.4rem;
    font-size: 1.2rem;
    padding: 18px 0 25px; }
  .rates-box__sum {
    font-weight: bold;
    font-size: 2.4rem; }
  .rates-box__desc {
    height: 70px;
    overflow: hidden;
    padding: 0 20px;
    margin-bottom: 9px;
    font-size: 1.2rem; }

[class*=js-animate] {
  opacity: 0; }

.animated {
  opacity: 1; }

.button-down {
  display: inline-block;
  text-decoration: none;
  background: url("../images/btn-down.png") 0 0 no-repeat;
  height: 63px;
  width: 63px; }

.header {
  height: 105px;
  position: fixed;
  z-index: 999;
  width: 100%;
  padding: 60px 0 0; }
  .header__logo {
    float: left;
    padding-top: 5px; }
  .header__tagline {
    float: left;
    width: 210px;
    padding-top: 5px;
    padding-left: 50px;
    margin-left: 40px; }
  .header__registration {
    float: right; }

.logo__link {
  display: inline-block;
  text-decoration: none; }

.tagline {
  font-size: 0.93333rem;
  line-height: 1.2rem;
  opacity: .6; }
  .tagline_line {
    position: relative; }
    .tagline_line:before {
      content: '';
      width: 22px;
      height: 1px;
      background-color: #fff;
      position: absolute;
      top: 14px;
      left: 0; }

.registration__btn {
  margin: 0 10px; }

.section-one {
  height: 100%; }
  .section-one__content {
    height: 100%; }
  .section-one__button-down {
    position: absolute;
    top: 85px;
    left: 50%;
    margin: 0 0 0 -31px;
    z-index: 10; }
  .section-one__box-img {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    font-size: 0;
    text-align: center; }

.fp-viewing-section-1 .footer {
  opacity: 0; }

.section-two {
  height: 100%; }

.section-thee {
  height: 100%; }

.section-four {
  height: 100%; }

.section-five {
  height: 100%;
  position: relative; }
  .section-five__box-description {
    text-align: center;
    max-width: 660px;
    margin: 0 auto; }

.footer {
  height: 95px;
  position: fixed;
  z-index: 999;
  width: 100%;
  bottom: 0;
  left: 0;
  right: 0;
  transition: all .3s ease; }
  .footer__left {
    float: left;
    width: 50%; }
  .footer__right {
    float: right;
    width: 50%;
    text-align: right; }
  .footer__nav-menu {
    text-align: center;
    padding: 0 35px 0 0; }

@media screen and (min-width: 1340px) {
  .box-img__6 {
    width: 200%; } }

@media screen and (max-width: 1440px) {
  .wrapper {
    padding: 0 15px; }
  .box-img__2 {
    right: 40px; }
  .box-img__3 {
    right: 0; } }

@media screen and (max-width: 1339px) {
  #fp-nav.left {
    left: 17px; }
  .section__box-description {
    padding-left: 50px; }
  .box-img__1 {
    max-width: 100%;
    top: 0;
    left: 0;
    right: auto; }
  .box-img__2 {
    max-width: 70%;
    top: 50px; }
  .box-img__3 {
    max-width: 70%;
    top: 90px; }
  .box-img__4 {
    max-width: 100%;
    top: 0; }
  .box-img__5 {
    top: -70px;
    right: 10%;
    max-width: 70%; }
  .title-big {
    font-size: 3.33333rem; }
  .title-middle {
    font-size: 3rem; }
  .rates-list__item {
    width: 290px; }
  .box-img__6 {
    max-width: 1000px; } }

@media screen and (max-width: 1023px) {
  html {
    font-size: 12px; }
  .header__logo {
    width: 25%;
    padding-right: 10px; }
  .header__tagline {
    width: 25%;
    padding-left: 40px;
    margin-left: 0; }
  .header__registration {
    width: 50%;
    text-align: right; }
  .logo__img {
    width: 100%; }
  .btn {
    line-height: 36px;
    min-width: 120px; }
    .btn_size_m {
      min-width: 180px; }
  .rates-list__item {
    width: 240px; }
  .nav-menu__link {
    padding: 0 10px; }
  .footer__nav-menu {
    padding: 0; } }

@media screen and (max-width: 767px) {
  .header {
    padding-top: 15px; }
    .header__logo {
      width: 100%;
      float: none;
      text-align: center;
      padding: 0 20px 10px; }
    .header__tagline {
      width: 100%;
      float: none;
      padding: 5px 20px 20px;
      text-align: center;
      display: none; }
    .header__registration {
      width: 100%;
      float: none;
      text-align: center; }
  .title-big {
    font-size: 3.06667rem; }
  .section-one__button-down {
    top: -60px;
    margin-left: -25px; }
    .section-one__button-down img {
      width: 50px; }
  #fp-nav.left {
    left: 5px; }
  .section__shadow:after {
    display: none; }
  .section-two,
  .section-thee,
  .section-four {
    min-height: 450px; }
  .section-one__content {
    min-height: 450px; }
  .section__box-description {
    padding: 0;
    width: 100%;
    float: none;
    height: 135px;
    overflow: hidden; }
  .box-content__item {
    padding: 50px  20px 0;
    width: 100%; }
  .section__box-img {
    float: none;
    width: 100%;
    height: 220px; }
  .footer {
    height: auto; }
    .footer__left {
      float: none;
      width: 100%;
      padding: 0; }
    .footer__right {
      float: none;
      width: 100%;
      padding: 5px 0;
      text-align: center; }
    .footer__nav-menu {
      display: none; }
  .nav-menu__link.active:after {
    display: none; }
  .icon-lines {
    display: none; }
  .box-img__5 {
    top: -40px; }
  .rates-list {
    display: block;
    padding: 0;
    font-size: 0; }
    .rates-list__item {
      width: 50%;
      max-width: 220px;
      font-size: 1rem;
      display: inline-block;
      vertical-align: top; }
      .rates-list__item .btn {
        min-width: 90%; }
      .rates-list__item:after {
        display: none; }
  .rates-box {
    min-height: 200px; }
    .rates-box__desc {
      height: 25px;
      margin: 0; }
  .fp-nav__numb {
    margin: 15px 8px; }
  .box-content__section-one {
    padding: 0 20px 0; }
  .box-img__1 {
    top: 30px; }
  .box-img__2 {
    top: 80px; }
  .box-img__3 {
    top: 120px; }
  .box-img__4 {
    top: 70px; }
  .box-img__5 {
    top: 30px; }
  .section-one__button-down {
    display: none; }
  .box-img__6 {
    max-width: 600px; }
  .section__box-img_theme_h {
    min-height: 150px; } }

@media screen and (max-width: 413px) {
  html {
    font-size: 11px; }
  p {
    padding: 10px 0;
    font-size: 0.93333rem; }
  .header {
    height: 90px;
    padding-top: 5px; }
  .btn {
    min-width: 100px;
    line-height: 30px; }
    .btn_size_m {
      min-width: 16px; }
  .nav-menu__link {
    padding: 0 5px; }
  .box-img__4 {
    top: 30px;
    right: 0; }
  .box-img__5 {
    top: 5px;
    right: 15%; }
  .title-big {
    font-size: 2.66667rem; }
  .title-middle {
    font-size: 2.53333rem; }
  .rates-box__price {
    padding: 5px 0 10px; }
  .rates-box {
    min-height: 140px; }
  .rates-box__sum {
    font-size: 1.33333rem; }
  .box-img__6 {
    max-width: 400px; } }

@media screen and (max-width: 767px) and (orientation: landscape) {
  .fp-tableCell {
    height: 550px !important;
    min-height: 550px !important; }
  .section__box-img {
    max-width: 300px;
    margin: 0 auto; }
  .box-img__mac {
    max-width: 50%; }
  .footer,
  .header {
    background-color: #343f56;
    position: static; } }

/*# sourceMappingURL=data:application/json;base64, */
